name: Run CI with uv

on:
  push: # just always run on push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
          #- '3.13' # removed because it takes much longer than the others

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Install dependencies
        run: uv pip install --system --no-deps .

      - name: Run tests
        run: uv run pytest
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: 
      - test

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Build package
        run: |
          rm -rf dist/ build/
          uv run python -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      # - name: Check package
      #   run: |
      #     pip install twine
      #     twine check dist/*

  publish-to-pypi-test:
    name: Publish to PyPI test
    needs: 
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/carrot-transform
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution ðŸ“¦ to TestPyPI
      # we publish to test whenever there's a commit to main
      if: github.ref == 'refs/heads/main'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi-main:
    name: Publish to PyPI main
    needs:
      - build
      - publish-to-pypi-test
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/carrot-transform
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        # we publish to main whever there's a version wioth a tag
        if: startsWith(github.ref, 'refs/tags/v') 
        uses: pypa/gh-action-pypi-publish@release/v1